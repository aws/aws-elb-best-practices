{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Elastic Load Balancing (ELB) best practices guides. The aim of this project is to offer prescriptive guidance for utilizing ELB in the AWS Cloud. The content in the guides is a collection of best practices aligned with the AWS Well-Architected Framework and other sources such as the AWS documentation, AWS Whitepapers, Amazon Builders' Library. As the ELB Team, we have incorporated insights gained from our direct experiences with customers. We also welcome suggestions from the community.</p> <p>We currently have published guides for the following topics:</p> <ul> <li>ELB Best Practices for Security<ul> <li>Data Protection</li> <li>Incident Response</li> <li>Infrastructure Protection</li> <li>Security Assurance</li> <li>Vulnerability Management</li> </ul> </li> </ul> <p>We have plans to extend the guides to include a variety of topics such as Performance, Reliability, Observability and Scaling.</p>"},{"location":"#about","title":"About","text":"<p>This guide was conceived by the ELB Customer Success team, inspired by the EKS Best Practices Guides.</p> <p>We chose to publish it on GitHub to allow for quicker iterations and, most importantly, to capture and incorporate feedback from the community.</p>"},{"location":"#related-guides","title":"Related guides","text":"<p>EKS Best Practices Guides</p> <p>AWS Observability Best Practices</p> <p>EMR Containers Best Practices Guides </p>"},{"location":"#contributing","title":"Contributing","text":"<p>We encourage you to contribute to these guides. If you have implemented a practice that has proven to be effective, please share it with us by opening an issue or a pull request. Similarly, if you discover an error or flaw in the guidance we've already published, please submit a PR to correct it.</p>"},{"location":"checklist/","title":"Checklist","text":"<p>The section contains all best practices mentioned in the guide.</p>"},{"location":"checklist/#security","title":"Security","text":""},{"location":"checklist/#data-protection","title":"Data Protection","text":"<ul> <li> <p> [ALB, NLB] Use HTTPS / TLS listeners (more details)</p> </li> <li> <p> [ALB] Use HTTP to HTTPS redirection rule. (more details)</p> </li> <li> <p> [ALB, NLB] Use the most restrict security policy that is compatible with clients. (more details)</p> </li> <li> <p> [ALB, NLB] Use AWS Certificate Manager for TLS certificates. (more details)</p> </li> <li> <p> [ALB, NLB] For end-to-end encryption, use TLS/HTTPS on both the load balancer listener and target group. (more details)</p> </li> </ul>"},{"location":"checklist/#incident-response","title":"Incident Response","text":"<ul> <li> <p> [ALB, NLB] Enable access logs. (more details)</p> </li> <li> <p> [ALB, NLB] Consolidate access logs in the Log Archive account. (more details)</p> </li> <li> <p> [ALB, NLB] Use a tool to analyze access logs. (more details)</p> </li> <li> <p> [ALB, NLB] Monitor events using AWS Health. (more details)</p> </li> <li> <p> [ALB, NLB] Include contacting AWS in your security incident playbooks. (more details)</p> </li> </ul>"},{"location":"checklist/#infrastructure-protection","title":"Infrastructure Protection","text":"<ul> <li> <p> [ALB, NLB] For DDoS protection against sophisticated, frequent and large attacks enable AWS Shield Advanced. (more details)</p> </li> <li> <p> [ALB, NLB] For enhanced DDoS resilience, allow untracked flows in the security group. (more details)</p> </li> <li> <p> [ALB, NLB] For DDoS protection and mitigation, know the normal behaviour of your clients. (more details)</p> </li> <li> <p> [ALB, NLB] For DDoS mitigation, scale the targets to absorb the traffic. (more details)</p> </li> <li> <p> [ALB] For DDoS protection, use AWS WAF integrated with ALB for Application layer defense. (more details)</p> </li> <li> <p> [ALB] For DDoS protection, use AWS WAF rate-based rules. (more details)</p> </li> <li> <p> [ALB, NLB] For DDoS protection, leverage AWS Edge locations by integrating either CloudFront or Global Accelerator to your load balancer. (more details)</p> </li> <li> <p> [ALB] When using CloudFront, restrict users from directly accessing the Application Load Balancer. (more details)</p> </li> <li> <p> [ALB, NLB] When using CloudFront, lock down the load balancer security group to accept connections only from CloudFront. (more details)</p> </li> <li> <p> [ALB, NLB] Lock down the target security groups to receive traffic only from the load balancer. (more details)</p> </li> </ul>"},{"location":"checklist/#security-assurance","title":"Security Assurance","text":"<ul> <li> [ALB, NLB] Use automated security and compliance checks. (more details)</li> </ul>"},{"location":"checklist/#vulnerability-management","title":"Vulnerability Management","text":"<ul> <li> [ALB] Use Strictest mode for desync mitigation. (more details)</li> </ul>"},{"location":"security/","title":"Home","text":"<p>This section provides best practices related to security and covers both Application Load Balancer (ALB) and Network Load Balancer (NLB).</p>"},{"location":"security/#how-to-use-this-guide","title":"How to use this guide","text":"<p>This guide is meant to provide generic best practices for architects, developers and engineers responsible for designing, deploying and operating a system that leverage Amazon Elastic Load Balancer (ELB) for traffic distribution.</p> <p>This guide covers two types of Elastic Load Balancing services: Application Load Balancer (ALB) and Network Load Balancer (NLB). Unless stated otherwise in a specific section, the best practice are applicable to both. We may sometimes use term 'ELB' (Elastic Load Balancing) to refer collectively to both ALB and NLB.</p> <p>Each topic presents a brief overview, followed by recommendations and best practices. Topics can be read in any order order   and it's essential to test and validate recommendations to ensure they align with your specific requirements.</p>"},{"location":"security/#security-overview","title":"Security Overview","text":"<p>Elastic Load Balancing (ELB) is built and managed with security as a top priority.</p> <p>Security is a shared responsibility between AWS and the customer. Generally speaking, AWS is responsible for the \u201cSecurity of the Cloud\u201d while the customer is responsible for the \u201cSecurity in the Cloud\u201d. To understand what this means in the context of ELB, refer to the image below:</p> <p></p> <p>A few examples can help clarify these responsibility boundaries:</p> <ul> <li>AWS is responsible for patching the load balancer software in case it becomes affected by a new Common Vulnerabilities and Exploits (CVE), while the customer is responsible for doing the same for the software running on the targets.</li> <li>The customer is responsible for configuring a TLS listener, while ELB is responsible for the TLS implementation running in the load balancer nodes.</li> </ul> <p>References and Further Reading</p> <p>Security in Elastic Load Balancing</p> <p>Shared Responsibility Model</p>"},{"location":"security/#feedback","title":"Feedback","text":"<p>This guide is being released on GitHub to collect direct feedback and suggestions from the broader AWS Cloud community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. We intend to update the guide periodically as new features are added to the service or when a new best practice evolves.</p>"},{"location":"security/data_protection/","title":"Data Protection","text":"<p>Data protection is one of the areas of the Security Pillar of the AWS Well-Architected Framework. It recommends encrypting all data in transit. This section outlines recommendations for using TLS (with NLB) or HTTPS (with ALB) to ensure data is protected while in transit.</p> <p>TLS stands for 'Transport Layer Security' and it is a sucessor of the SSL (Secure Sockets Layer). Both TLS and SSL terms are often used interchangeably, in this guide we will be using the term TLS to refer to both. HTTPS stands for 'Hypertext Transfer Protocol Secure'. It is the HTTP protocol trasmitted over a TLS session.</p>"},{"location":"security/data_protection/#tls-listeners","title":"TLS Listeners","text":"<p>Transport Layer Security (TLS) is a cryptographic protocol that secures internet communications. Implementing TLS for your application ensures that data remains confidential while in transit. By using an HTTPS or TLS listener on your load balancer, you offload the computational overhead and the security aspects of this encryption to the load balancer itself. When using HTTPS/TLS listeners, both ALB and NLB implement TLS  termination and negotiation on the front-end connection, which is from the client to the load balancer. From the load balancer to the target, you can opt for either HTTPS for end-to-end encryption or plain HTTP if you intend to offload TLS to the load balancer.</p> <p>Best Practice</p> <p>[ALB, NLB] Use HTTPS / TLS listeners</p> <p>(ALB only) If you need to provide a HTTP endpoint, the recommended approach is to create a redirection rule from HTTP to HTTPS for your plain HTTP listener. This avoids the need to enable plain HTTP on your targets.</p> <p>Best Practice</p> <p>[ALB] Use HTTP to HTTPS redirection rule.</p> <p>References and Further Reading</p> <p>Create an HTTPS listener for your Application Load Balancer</p> <p>TLS listeners for your Network Load Balancer</p> <p>AWS Config rule alb-http-to-https-redirection-check</p> <p>Application Load Balancer should be configured to redirect all HTTP requests to HTTPS</p>"},{"location":"security/data_protection/#security-policy-for-tls-listeners","title":"Security Policy for TLS Listeners","text":"<p>Security policies are configured for TLS listeners and determine which TLS protocols and ciphers are supported.</p> <p>During a TLS handshake, both clients and the load balancer provide a list of ciphers and protocols in order of preference. The first cipher on the server\u2019s list, defined by the security policy, that matches any of the client\u2019s cipher is selected for communication.</p> <p>There are several different security policies for both ALB and NLB. When using the AWS CLI to create a load balancer, the default policy is 'ELBSecurityPolicy-2016-08' which aims to maximize compatibility.</p> <p>From a security perspective, it is recommended to remove any protocols and ciphers that are not in use in order to reduce the attack surface. Especially if you have control over the clients, you could configure them to use the latest TLS protocol (version 1.3) and a strict security policy in the load balancer such as 'TLS13-1-3-2021-06'. Conversely, if you don't have control over the clients connecting to the load balancer, which is commonly the case for public websites, it is recommended that you regularly review which protocols and ciphers are being used by legitimate clients and look for opportunities to deprecate old protocols. You can leverage ALB Access Logs or NLB TLS Access Logs to find the TLS version used in each request and, for example, search if outdated protocols, like TLS 1.0, are in use.</p> <p>Best Practice</p> <p>[ALB, NLB] Use the most restrict security policy that is compatible with clients.</p> <p>References and Further Reading</p> <p>ALB Security Policies</p> <p>NLB Security Policies</p> <p>Step by step for Log Analysis with Amazon Athena</p> <p>CDK &amp; CloudFormation samples for Log Analysis with Amazon Athena</p>"},{"location":"security/data_protection/#tls-certificates","title":"TLS Certificates","text":"<p>When using HTTPs or TLS listeners in your load balancer, you are required to provide a TLS certificate. Certificates consist of a public and private key. ELB integrates with AWS Certificate Manager which simplifies the creation and management of TLS certificates. This integration ensures private key protection and facilitates auditing for certificate use.</p> <p>Best Practice</p> <p>[ALB, NLB] Use AWS Certificate Manager for TLS certificates.</p> <p>References and Further Reading</p> <p>Implement secure key and certificate management</p> <p>AWS Config Rule elbv2-acm-certificate-required</p>"},{"location":"security/data_protection/#tls-at-the-targets","title":"TLS at the targets","text":"<p>Offloading TLS from targets to the load balancer it is a good practice from performance efficiency stand point. From the security perspective, if your targets are running inside the same VPC, the communication path is in a private network.</p> <p>For cases where targets operate outside the VPC or for customers with compliance needs, end-to-end encryption might be beneficial. For that, customers can configure the Target Group with HTTPS(ALB) and TLS(NLB) protocols and set up TLS/HTTPS in the targets.</p> <p>Best Practice</p> <p>[ALB, NLB] For end-to-end encryption, use TLS/HTTPS on both the load balancer listener and target group.</p> <p>References and Further Reading</p> <p>Infrastructure security in Amazon VPC</p>"},{"location":"security/incident_response/","title":"Incident Response","text":"<p>Incident response is one of the areas of the Security Pillar of the AWS Well-Architected Framework. It emphasises the preparation required for security teams to operate effectively during an event. This section provides recommendations on logging that could be used for forensic purposes and how to engage with AWS during such events.</p>"},{"location":"security/incident_response/#access-logs","title":"Access Logs","text":"<p>Access logs offer detailed insights into the requests that reach the load balancer. These details are important during a troubleshooting or security event. Note that ALB Access Logs or NLB TLS Access Logs are not enabled by default, and enabling it will incur S3 storage costs.</p> <p>Best Practice</p> <p>[ALB, NLB] Enable access logs.</p> <p>The destination for the ALB or NLB logs is an S3 bucket. In multi-account environments, it\u2019s recommended to consolidate the logs into a centralised account. This approach allows for the application of  security controls to protect the confidentiality and integrity of the logs.</p> <p>Best Practice</p> <p>[ALB, NLB] Consolidate access logs in the Log Archive account.</p> <p>Having the logs in a centralised location not only enhances security but also simplifies integration with tools for log analysis. From these logs, you can extract valuable insights such as Top Requesters, Average Request Size, and most-used TLS Ciphers.</p> <p>Best Practice</p> <p>[ALB, NLB] Use a tool to analyze access logs.</p> <p>References and Further Reading</p> <p>Enable access logs for your Application Load Balancer</p> <p>Access logs for your Network Load Balancer</p> <p>Application and Classic Load Balancers logging should be enabled</p> <p>AWS Config Rule elb-logging-enabled</p> <p>Security OU and accounts - Log archive account</p> <p>Security OU \u2013 Log Archive account</p> <p>Querying Application Load Balancer logs</p> <p>Querying Network Load Balancer logs</p> <p>Step by step for Log Analysis with Amazon Athena</p> <p>CDK &amp; CloudFormation samples for Log Analysis with Amazon Athena</p>"},{"location":"security/incident_response/#events","title":"Events","text":"<p>ELB Service events and changes are notified via AWS Health. Customers should proactively monitor AWS Health in order to action whenever there is a communication from AWS. Also, consulting AWS Health Dashboard should be part of the playbook for incident response.</p> <p>Best Practice</p> <p>[ALB, NLB] Monitor events using AWS Health.</p> <p>References and Further Reading</p> <p>What is AWS Health?</p> <p>Use a process for event, incident, and problem management</p>"},{"location":"security/incident_response/#engage-aws-security","title":"Engage AWS Security","text":"<p>Knowing how to engage AWS Security can help during an active security event. AWS has a variety of security channels that can be used:</p> <ul> <li>AWS Security: aws-security@amazon.com</li> <li>AWS Customer Incident Response Team</li> <li>AWS Shield Response Team (SRT) / DDoS response support</li> <li>Vulnerability Reporting</li> <li>Abuse Reporting</li> <li>AWS Compliance Information</li> <li>Testing / Simulated Events Form</li> </ul> <p>Best Practice</p> <p>[ALB, NLB] Include contacting AWS in your security incident playbooks.</p> <p>References and Further Reading</p> <p>AWS Customer Incident Response Team</p> <p>Understand AWS response teams and support</p>"},{"location":"security/infrastructure_protection/","title":"Infrastructure Protection","text":"<p>Infrastructure protection is one of the areas of the Security Pillar of the AWS Well-Architected Framework. It ensures that systems and services within your workload are protected against unintended and unauthorized access, and potential vulnerabilities. This section outlines recommendations for Distributed Denial of Service (DDoS) resilience and security groups.</p>"},{"location":"security/infrastructure_protection/#distributed-denial-of-service-ddos-protection","title":"Distributed Denial of Service (DDoS) Protection","text":"<p>Every ELB is automatically protected by AWS Shield standard, which is a managed distributed denial of service (DDoS) protection service. AWS Shield Standard provides protection against the most common and frequently occurring infrastructure (layer 3 and 4) attacks, such as  SYN/UDP floods, reflection attacks, and others to support high availability of your applications on AWS.</p> <p>Additionally, Application Load Balancer (ALB) also provides additional protection at layer 7 when using HTTP/HTTPS listeners:</p> <ul> <li>They will not forward mal-formed HTTP Requests (don\u2019t meet HTTP RFC specification).</li> <li>They offer protection against certain types of HTTP slow attacks.</li> </ul> <p>Furthermore, ELB also :</p> <ul> <li>Reduce the risk of overloading your application by distributing traffic across many target instances.</li> <li>Automatically scales based on traffic received, and than can include DDoS traffic. Customers should plan for target scaling, see Plan for Scale.</li> <li>Can integrate with Shield Advance</li> <li>Can integrate with AWS WAF</li> </ul> <p>References and Further Reading</p> <p>Best practices for DDoS mitigation</p> <p>AWS Best Practices for DDoS Resiliency</p>"},{"location":"security/infrastructure_protection/#consider-using-aws-shield-advanced","title":"Consider using AWS Shield Advanced","text":"<p>By default, ALB comes with AWS Shield Standard, which provides all AWS customers with protection against common and most frequently occurring infrastructure (layer 3 and 4) attacks like SYN/UDP floods, reflection attacks, and others to endure high availability of your applications on AWS.</p> <p>Some customers are regularly targeted by DDoS attacks or may have strict compliance requirements to mitigate attacks. For customers requiring enhanced protection against more sophisticated, frequent and larger attacks, it is suggested enabling AWS Shield Advanced. </p> <p>AWS Shield Advanced offers advanced attack mitigation, 24x7 access to the Shield Response Team (SRT) and cost protection for scaling.</p> <p>Best Practice</p> <p>[ALB, NLB] For DDoS protection against sophisticated, frequent and large attacks enable AWS Shield Advanced.</p> <p>References and Further Reading</p> <p>AWS Shield Advanced</p>"},{"location":"security/infrastructure_protection/#security-group-flow-tracking-alb-only","title":"Security Group - Flow tracking (ALB only)","text":"<p>Security groups attached to the ALB use connection tracking to monitor traffic to and from the load balancer. Enhance the DDoS resilience of your load balancer by configuring it to not require EC2 connection tracking. If a security group rule allows TCP or UDP flows from all traffic (0.0.0.0/0 or ::/0) to the listening port (80, 443, etc.), and there is a matching rule in the opposite direction that permits all response traffic (0.0.0.0/0 or ::/0) for all ports (0-65535) on both TCP and UDP, then that flow of traffic is not tracked. This helps to prevent potential negative effects of this feature on the load balancer\u2019s packet throughput, enabling it to detect and scale based on the increase in traffic during a DDoS event.</p> <p>Example of a security group allowing untracked flows for connections to the port 443:</p> Ingress Rule Protocol Port Source TCP 443 0.0.0.0/0 Egress Rule Protocol Port Destination TCP 0-65535 0.0.0.0/0 <p>Best Practice</p> <p>[ALB, NLB] For enhanced DDoS resilience, allow untracked flows in the security group.</p> <p>References and Further Reading</p> <p>Best practices for DDoS mitigation - Elastic Load Balancing (BP6)</p> <p>Security group connection tracking</p> <p>Security group - Untracked connections</p>"},{"location":"security/infrastructure_protection/#know-normal-behavior-traffic-pattern-user-agents-demographics","title":"Know normal behavior (Traffic pattern, user agents, demographics)","text":"<p>In the event of a DDoS attack, distinguishing between normal and abnormal traffic is crucial. To do so, an understanding of what constitutes \u2018normal\u2019 is essential.</p> <p>To profile typical traffic, consider the following aspects:</p> <ul> <li>Traffic patterns: What are the typical fluctuations in your traffic throughout the day? For instance, a food delivery company may see a surge in traffic around lunch time and significantly less activity in the early hours of the day. </li> <li>User agents: What are the usual user agents connecingt to your load balancer? These could be common web browsers or specific applications.</li> <li>Demographics: Where are the clients accessing your load balancer typically located?</li> </ul> <p>Significant deviation from these norms could indicate a potential attack, providing valuable information for mitigation strategies. For example, you could use AWS WAF to block access from some specific countries if you identify unusual traffic from those locations.</p> <p>Best Practice</p> <p>[ALB, NLB] For DDoS protection and mitigation, know the normal behaviour of your clients.</p> <p>References and Further Reading</p> <p>Access Logs</p> <p>Monitor your Network Load Balancers</p> <p>Monitor your Application Load Balancers</p> <p>Best practices for DDoS mitigation - Metrics and alarms</p>"},{"location":"security/infrastructure_protection/#plan-for-scale","title":"Plan for Scale","text":"<p>Scaling to absorb is one of the mitigation techniques that can be used against a DDoS attack. While the ELB will automatically scale to manage the additional traffic, you will need to configure your targets for the same. Using an Auto Scaling group, you can set scaling policies based on resource usage of your EC2 instance targets, and integrate with ELB to automatically register the new instances with the load balancer. </p> <p>It\u2019s important to ensure you have enough free IP addresses in both ELB and target subnets to accommodate scaling, and that you have sufficient EC2 quota to launch the desired number of EC2 instances.</p> <p>Best Practice</p> <p>[ALB, NLB] For DDoS mitigation, scale the targets to absorb the traffic.</p> <p>References and Further Reading</p> <p>What is Amazon EC2 Auto Scaling?</p> <p>Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group</p>"},{"location":"security/infrastructure_protection/#consider-using-aws-waf-alb-only","title":"Consider using AWS WAF (ALB only)","text":"<p>ALB can be integrated with AWS WAF (Web Application Firewall) , allowing you to filter and block requests based on specific request signatures. With WAF, you can create Web Access Control Lists (ACLs) with custom rules, and also utilize AWS Managed rules. For instance, the Amazon IP Reputation List rule group includes rules based on Amazon's internal threat intelligence, allowing for further protection of your applications against potential threats.</p> <p>Best Practice</p> <p>[ALB] For DDoS protection, use AWS WAF integrated with ALB for Application layer defense.</p> <p>When using WAF, implement rate-based rules for better protection against Layer 7 HTTP flood attacks. The blog post \"The three most important AWS WAF rate-based rules\" is a great reference based on the learnings of AWS\u2019 Shield Response Team (SRT).</p> <p>Best Practice</p> <p>[ALB] For DDoS protection, use AWS WAF rate-based rules.</p> <p>References and Further Reading</p> <p>Application layer defense</p> <p>AWS Web Application Firewall</p> <p>Amazon IP Reputation List rule</p> <p>The three most important AWS WAF rate-based rules</p> <p>AWS Config Rule alb-waf-enabled</p>"},{"location":"security/infrastructure_protection/#consider-using-amazon-cloudfront-or-aws-global-accelerator","title":"Consider using Amazon CloudFront or AWS Global Accelerator","text":"<p>ELB can integrate with Amazon CloudFront or AWS Global Accelerator, which can serve as entry points for your web application.</p> <p>Both Amazon CloudFront and AWS Global Accelerator uses AWS Edge locations. These edge locations provide an additional layer of network infrastructure and can increase your ability to optimize latency and throughput to users, but also enhances your application resilience against DDoS attacks.</p> <p>Best Practice</p> <p>[ALB, NLB] For DDoS protection, leverage AWS Edge locations by integrating either CloudFront or Global Accelerator to your load balancer.</p> <p>References and Further Reading</p> <p>Amazon CloudFront</p> <p>AWS Global Accelerator</p> <p>AWS Global Edge locations</p> <p>Use AWS Edge locations for scale</p>"},{"location":"security/infrastructure_protection/#when-using-cloudfront-restrict-the-direct-access-to-the-load-balancer","title":"When using CloudFront, restrict the direct access to the load balancer","text":"<p>Prevent users from bypassing Amazon CloudFront and accessing your load balancer directly. You can configure Amazon CloudFront and your Application Load Balancer to prevent users from directly accessing the load balancer by configuring CloudFront to add a custom HTTP header to the requests that it sends to your origin. In the ALB you then configure a rule to validate the existance of the header.</p> <p>This allows users to access the Application Load Balancer only through CloudFront, ensuring that you get the benefits of using CloudFront.</p> <p>Best Practice</p> <p>[ALB] When using CloudFront, restrict users from directly accessing the Application Load Balancer.</p> <p>Additionally, you should lock down the security group associated with the load balancer used as the origin, ensuring it accepts connections only from CloudFront.</p> <p>Best Practice</p> <p>[ALB, NLB] When using CloudFront, lock down the load balancer security group to accept connections only from CloudFront.</p> <p>References and Further Reading</p> <p>Restricting access to Application Load Balancers</p> <p>Limit access to your origins using the AWS-managed prefix list for Amazon CloudFront</p>"},{"location":"security/infrastructure_protection/#target-security-groups","title":"Target Security Groups","text":"<p>To ensure your targets receive traffic exclusively from the load balancer, restrict the security group(s) associated with your targets to accept traffic solely from the load balancer. This can be achieved by setting the load balancer's security group as the source in the ingress rule of the target's security group.</p> <p>Best Practice</p> <p>[ALB, NLB] Lock down the target security groups to receive traffic only from the load balancer.</p>"},{"location":"security/security_assurance/","title":"Security Assurance","text":""},{"location":"security/security_assurance/#automated-security-and-compliance-checks","title":"Automated security and compliance checks","text":"<p>Cloud environments are dynamic by nature. Having automated security checks is important to make sure the existing and new load balancers will adhere to the controls defined by your organisation.</p> <p>Both AWS Trusted Advisor and AWS Security Hub offers security and best practices checks specific for ELBs.</p> <p>For example, you can enable AWS Security Hub to validate whether your ALBs have proper dsync mitigation mode with the rule \"Application Load Balancer should be configured with defensive or strictest desync mitigation mode\"</p> <p>Best Practice</p> <p>[ALB, NLB] Use automated security and compliance checks.</p> <p>References and Further Reading</p> <p>AWS Trusted Advisor</p> <p>AWS Security Hub</p> <p>AWS Security Hub - ELB Controls</p>"},{"location":"security/vulnerability_management/","title":"Vulnerability Management","text":""},{"location":"security/vulnerability_management/#desync-mitigation-alb-only","title":"Desync mitigation (ALB only)","text":"<p>HTTP desync attack, or HTTP request smuggling attacks, aim to exploit different interpretation of RFC non-compliant HTTP requests across a chain of proxies, opening up the possibility of smuggling a request to the back-end.</p> <p>Application Load Balancer (ALB) supports HTTP Desync Mitigation Mode that classify every request based on its threat level using an AWS Open Source library called HTTP Desync Guardian.</p> <p>Customers can choose among three modes - \u201cDefensive\u201d, \u201cStrictest\u201d, and \u201cMonitor\u201d. The \u201cStrictest\u201d mode ensure that your application only sees requests that are RFC 7230 compliant.</p> <p>The \u201cStrictest\u201d mode is recommended from the security perspective. However, to avoid false positives, users may want to keep it in the \u201cMonitor\u201d mode for some time, and monitor the DesyncMitigationMode_NonCompliant_Request_Count CloudWatch metric. Also, the \u201cclassification\u201d and \"classification_reason\" fields in the Access Logs should be evaluated to determine the impact of enabling \u201cStrictest\u201d mode.</p> <p>Best Practice</p> <p>[ALB] Use Strictest mode for desync mitigation.</p> <p>Note</p> <p>The feature drop_invalid_header_fields was initially intended to provide mitigation for HTTP desync attacks, and was deprecated for this purpose by the HTTP desync mitigation mode feature.</p> <p>References and Further Reading</p> <p>ALB Documentation - Desync mitigation mode</p> <p>Application and Classic Load Balancers are adding defense in depth with the introduction of Desync Mitigation Mode</p> <p>AWS Config Rule alb-desync-mode-check</p> <p>HTTP Desync Guardian</p> <p>Application Load Balancer should be configured with defensive or strictest desync mitigation mode</p>"}]}